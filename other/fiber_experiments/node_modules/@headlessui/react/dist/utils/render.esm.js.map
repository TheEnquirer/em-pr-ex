{"version":3,"file":"render.esm.js","sources":["../../src/utils/render.ts"],"sourcesContent":["import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n"],"names":["Features","RenderStrategy","render","props","slot","defaultTag","features","visible","name","_render","featureFlags","None","Static","isStatic","rest","unmount","strategy","Unmount","Hidden","match","hidden","style","display","tag","omit","as","Component","children","refName","passThroughProps","refRelatedProps","ref","undefined","resolvedChildren","className","Fragment","Object","keys","length","isValidElement","Array","isArray","Error","map","line","join","cloneElement","assign","mergeEventFunctions","compact","createElement","existingProps","functionsToMerge","clone","func","event","defaultPrevented","forwardRefWithAs","component","forwardRef","displayName","object","key","keysToOmit"],"mappings":"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"}