{"version":3,"file":"radio-group.esm.js","sources":["../../../src/components/radio-group/radio-group.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n"],"names":["ActionTypes","reducers","RegisterOption","state","action","options","id","element","propsRef","UnregisterOption","slice","idx","findIndex","radio","splice","RadioGroupContext","createContext","displayName","useRadioGroupContext","component","context","useContext","err","Error","RadioGroup","name","captureStackTrace","stateReducer","match","type","DEFAULT_RADIO_GROUP_TAG","props","value","onChange","disabled","passThroughProps","useReducer","dispatch","useLabels","labelledby","LabelProvider","useDescriptions","describedby","DescriptionProvider","useId","radioGroupRef","useRef","firstOption","useMemo","find","option","current","containsCheckedOption","some","triggerChange","useCallback","nextValue","nextOption","useTreeWalker","container","accept","node","getAttribute","NodeFilter","FILTER_REJECT","hasAttribute","FILTER_SKIP","FILTER_ACCEPT","walk","setAttribute","handleKeyDown","event","all","filter","map","key","Keys","ArrowLeft","ArrowUp","preventDefault","stopPropagation","result","focusIn","Focus","Previous","WrapAround","FocusResult","Success","activeOption","document","activeElement","ArrowRight","ArrowDown","Next","Space","registerOption","api","change","propsWeControl","ref","role","onKeyDown","React","Provider","render","defaultTag","OptionState","DEFAULT_OPTION_TAG","Option","optionRef","useFlags","Empty","addFlag","removeFlag","hasFlag","useIsoMorphicEffect","join","radioGroupDisabled","radioGroupValue","handleClick","Active","focus","handleFocus","handleBlur","isFirstOption","isDisabled","checked","undefined","tabIndex","onClick","onFocus","onBlur","slot","active","Label","Description"],"mappings":"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"}