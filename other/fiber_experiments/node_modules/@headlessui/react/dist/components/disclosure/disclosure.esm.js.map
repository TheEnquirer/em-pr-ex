{"version":3,"file":"disclosure.esm.js","sources":["../../../src/components/disclosure/disclosure.tsx"],"sourcesContent":["// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n  MutableRefObject,\n  ContextType,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  disclosureState: DisclosureStates\n\n  linkedPanel: boolean\n\n  buttonId: string\n  panelId: string\n}\n\nenum ActionTypes {\n  ToggleDisclosure,\n  CloseDisclosure,\n\n  SetButtonId,\n  SetPanelId,\n\n  LinkPanel,\n  UnlinkPanel,\n}\n\ntype Actions =\n  | { type: ActionTypes.ToggleDisclosure }\n  | { type: ActionTypes.CloseDisclosure }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n  | { type: ActionTypes.LinkPanel }\n  | { type: ActionTypes.UnlinkPanel }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.ToggleDisclosure]: state => ({\n    ...state,\n    disclosureState: match(state.disclosureState, {\n      [DisclosureStates.Open]: DisclosureStates.Closed,\n      [DisclosureStates.Closed]: DisclosureStates.Open,\n    }),\n  }),\n  [ActionTypes.CloseDisclosure]: state => {\n    if (state.disclosureState === DisclosureStates.Closed) return state\n    return { ...state, disclosureState: DisclosureStates.Closed }\n  },\n  [ActionTypes.LinkPanel](state) {\n    if (state.linkedPanel === true) return state\n    return { ...state, linkedPanel: true }\n  },\n  [ActionTypes.UnlinkPanel](state) {\n    if (state.linkedPanel === false) return state\n    return { ...state, linkedPanel: false }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet DisclosureContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nDisclosureContext.displayName = 'DisclosureContext'\n\nfunction useDisclosureContext(component: string) {\n  let context = useContext(DisclosureContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n  return context\n}\n\nlet DisclosureAPIContext = createContext<{\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n} | null>(null)\nDisclosureAPIContext.displayName = 'DisclosureAPIContext'\n\nfunction useDisclosureAPIContext(component: string) {\n  let context = useContext(DisclosureAPIContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureAPIContext)\n    throw err\n  }\n  return context\n}\n\nlet DisclosurePanelContext = createContext<string | null>(null)\nDisclosurePanelContext.displayName = 'DisclosurePanelContext'\n\nfunction useDisclosurePanelContext() {\n  return useContext(DisclosurePanelContext)\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DISCLOSURE_TAG = Fragment\ninterface DisclosureRenderPropArg {\n  open: boolean\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n}\n\nexport function Disclosure<TTag extends ElementType = typeof DEFAULT_DISCLOSURE_TAG>(\n  props: Props<TTag, DisclosureRenderPropArg> & {\n    defaultOpen?: boolean\n  }\n) {\n  let { defaultOpen = false, ...passthroughProps } = props\n  let buttonId = `headlessui-disclosure-button-${useId()}`\n  let panelId = `headlessui-disclosure-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId,\n    panelId,\n  } as StateDefinition)\n  let [{ disclosureState }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let close = useCallback(\n    (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => {\n      dispatch({ type: ActionTypes.CloseDisclosure })\n\n      let restoreElement = (() => {\n        if (!focusableElement) return document.getElementById(buttonId)\n        if (focusableElement instanceof HTMLElement) return focusableElement\n        if (focusableElement.current instanceof HTMLElement) return focusableElement.current\n\n        return document.getElementById(buttonId)\n      })()\n\n      restoreElement?.focus()\n    },\n    [dispatch, buttonId]\n  )\n\n  let api = useMemo<ContextType<typeof DisclosureAPIContext>>(() => ({ close }), [close])\n\n  let slot = useMemo<DisclosureRenderPropArg>(\n    () => ({ open: disclosureState === DisclosureStates.Open, close }),\n    [disclosureState, close]\n  )\n\n  return (\n    <DisclosureContext.Provider value={reducerBag}>\n      <DisclosureAPIContext.Provider value={api}>\n        <OpenClosedProvider\n          value={match(disclosureState, {\n            [DisclosureStates.Open]: State.Open,\n            [DisclosureStates.Closed]: State.Closed,\n          })}\n        >\n          {render({\n            props: passthroughProps,\n            slot,\n            defaultTag: DEFAULT_DISCLOSURE_TAG,\n            name: 'Disclosure',\n          })}\n        </OpenClosedProvider>\n      </DisclosureAPIContext.Provider>\n    </DisclosureContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Button.name].join('.'))\n  let internalButtonRef = useRef<HTMLButtonElement | null>(null)\n  let buttonRef = useSyncRefs(internalButtonRef, ref)\n\n  let panelContext = useDisclosurePanelContext()\n  let isWithinPanel = panelContext === null ? false : panelContext === state.panelId\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) {\n        if (state.disclosureState === DisclosureStates.Closed) return\n\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ToggleDisclosure })\n            document.getElementById(state.buttonId)?.focus()\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ToggleDisclosure })\n            break\n        }\n      }\n    },\n    [dispatch, isWithinPanel, state.disclosureState]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n\n      if (isWithinPanel) {\n        dispatch({ type: ActionTypes.ToggleDisclosure })\n        document.getElementById(state.buttonId)?.focus()\n      } else {\n        dispatch({ type: ActionTypes.ToggleDisclosure })\n      }\n    },\n    [dispatch, props.disabled, state.buttonId, isWithinPanel]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n\n  let type = useResolveButtonType(props, internalButtonRef)\n  let passthroughProps = props\n  let propsWeControl = isWithinPanel\n    ? { ref: buttonRef, type, onKeyDown: handleKeyDown, onClick: handleClick }\n    : {\n        ref: buttonRef,\n        id: state.buttonId,\n        type,\n        'aria-expanded': props.disabled\n          ? undefined\n          : state.disclosureState === DisclosureStates.Open,\n        'aria-controls': state.linkedPanel ? state.panelId : undefined,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onClick: handleClick,\n      }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n  close: (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => void\n}\ntype PanelPropsWeControl = 'id'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Panel.name].join('.'))\n  let { close } = useDisclosureAPIContext([Disclosure.name, Panel.name].join('.'))\n\n  let panelRef = useSyncRefs(ref, () => {\n    if (state.linkedPanel) return\n    dispatch({ type: ActionTypes.LinkPanel })\n  })\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.disclosureState === DisclosureStates.Open\n  })()\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.UnlinkPanel }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.disclosureState === DisclosureStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.UnlinkPanel })\n    }\n  }, [state.disclosureState, props.unmount, dispatch])\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open, close }),\n    [state, close]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n  }\n  let passthroughProps = props\n\n  return (\n    <DisclosurePanelContext.Provider value={state.panelId}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_PANEL_TAG,\n        features: PanelRenderFeatures,\n        visible,\n        name: 'Disclosure.Panel',\n      })}\n    </DisclosurePanelContext.Provider>\n  )\n})\n\n// ---\n\nDisclosure.Button = Button\nDisclosure.Panel = Panel\n"],"names":["DisclosureStates","ActionTypes","reducers","ToggleDisclosure","state","disclosureState","match","Open","Closed","CloseDisclosure","LinkPanel","linkedPanel","UnlinkPanel","SetButtonId","action","buttonId","SetPanelId","panelId","DisclosureContext","createContext","displayName","useDisclosureContext","component","context","useContext","err","Error","Disclosure","name","captureStackTrace","DisclosureAPIContext","useDisclosureAPIContext","DisclosurePanelContext","useDisclosurePanelContext","stateReducer","type","DEFAULT_DISCLOSURE_TAG","Fragment","props","defaultOpen","passthroughProps","useId","reducerBag","useReducer","dispatch","useEffect","close","useCallback","focusableElement","restoreElement","document","getElementById","HTMLElement","current","focus","api","useMemo","slot","open","React","Provider","value","OpenClosedProvider","State","render","defaultTag","DEFAULT_BUTTON_TAG","Button","forwardRefWithAs","ref","join","internalButtonRef","useRef","buttonRef","useSyncRefs","panelContext","isWithinPanel","handleKeyDown","event","key","Keys","Space","Enter","preventDefault","stopPropagation","handleKeyUp","handleClick","isDisabledReactIssue7711","currentTarget","disabled","useResolveButtonType","propsWeControl","onKeyDown","onClick","id","undefined","onKeyUp","DEFAULT_PANEL_TAG","PanelRenderFeatures","Features","RenderStrategy","Static","Panel","panelRef","usesOpenClosedState","useOpenClosed","visible","unmount","features"],"mappings":"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"}