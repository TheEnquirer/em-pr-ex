{"version":3,"file":"use-id.esm.js","sources":["../../src/hooks/use-id.ts"],"sourcesContent":["import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n"],"names":["id","generateId","useId","ready","useServerHandoffComplete","useState","setId","useIsoMorphicEffect","undefined"],"mappings":";;;;AAKA;AACA;AACA;AACA;;AAEA,IAAIA,EAAE,GAAG,CAAT;;AACA,SAASC,UAAT;AACE,SAAO,EAAED,EAAT;AACD;;SAEeE;AACd,MAAIC,KAAK,GAAGC,wBAAwB,EAApC;;kBACkBC,QAAQ,CAACF,KAAK,GAAGF,UAAH,GAAgB,IAAtB;MAArBD;MAAIM;;AAETC,EAAAA,mBAAmB,CAAC;AAClB,QAAIP,EAAE,KAAK,IAAX,EAAiBM,KAAK,CAACL,UAAU,EAAX,CAAL;AAClB,GAFkB,EAEhB,CAACD,EAAD,CAFgB,CAAnB;AAIA,SAAOA,EAAE,IAAI,IAAN,GAAa,KAAKA,EAAlB,GAAuBQ,SAA9B;AACD;;;;"}