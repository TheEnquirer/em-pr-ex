{"version":3,"file":"use-window-event.esm.js","sources":["../../src/hooks/use-window-event.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let listenerRef = useRef(listener)\n  listenerRef.current = listener\n\n  useEffect(() => {\n    function handler(event: WindowEventMap[TType]) {\n      listenerRef.current.call(window, event)\n    }\n\n    window.addEventListener(type, handler, options)\n    return () => window.removeEventListener(type, handler, options)\n  }, [type, options])\n}\n"],"names":["useWindowEvent","type","listener","options","listenerRef","useRef","current","useEffect","handler","event","call","window","addEventListener","removeEventListener"],"mappings":";;SAEgBA,eACdC,MACAC,UACAC;AAEA,MAAIC,WAAW,GAAGC,MAAM,CAACH,QAAD,CAAxB;AACAE,EAAAA,WAAW,CAACE,OAAZ,GAAsBJ,QAAtB;AAEAK,EAAAA,SAAS,CAAC;AACR,aAASC,OAAT,CAAiBC,KAAjB;AACEL,MAAAA,WAAW,CAACE,OAAZ,CAAoBI,IAApB,CAAyBC,MAAzB,EAAiCF,KAAjC;AACD;;AAEDE,IAAAA,MAAM,CAACC,gBAAP,CAAwBX,IAAxB,EAA8BO,OAA9B,EAAuCL,OAAvC;AACA,WAAO;AAAA,aAAMQ,MAAM,CAACE,mBAAP,CAA2BZ,IAA3B,EAAiCO,OAAjC,EAA0CL,OAA1C,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,CAACF,IAAD,EAAOE,OAAP,CAPM,CAAT;AAQD;;;;"}